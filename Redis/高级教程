
====================数据备份与恢复
====Redis 数据备份该命令将在 redis 安装目录中创建dump.rdb文件。
save			#执行备份
bgsave			#在后台执行备份

====恢复数据
如果需要恢复数据，只需将备份文件 (dump.rdb) 移动到 redis 安装目录并启动服务即可。获取 redis 目录可以使用
CONFIG GET dir

====================密码
config set requirepass "密码"	#设置密码
config get requirepass	#获取密码
auth "密码"			#登入验证

===================客户端连接
Redis 通过监听一个 TCP 端口或者 Unix socket 的方式来接收来自客户端的连接，当一个连接建立后，Redis 内部会进行以下一些操作：
首先，客户端 socket 会被设置为非阻塞模式，因为 Redis 在网络事件处理上采用的是非阻塞多路复用模型。
然后为这个 socket 设置 TCP_NODELAY 属性，禁用 Nagle 算法
然后创建一个可读的文件事件用于监听这个客户端 socket 的数据发送
config get maxclients		#客户最大连接数
client list			#返回连接到服务的客户端列表
client setname			#设置当前连接的名称
client getname			#获取通过 CLIENT SETNAME 命令设置的服务名称
client pause			#挂起客户端连接，指定挂起的时间以毫秒计
client kill			#关闭客户端连接

====================性能测试
该命令是在 redis 的目录下执行的，而不是 redis 客户端的内部指令。
redis-benchmark [option] [option value]

选项	描述（默认值）
-h	指定服务器主机名（127.0.0.1）
-p	指定服务器端口（6379）
-s	指定服务器 （socket）
-c	指定并发连接数（50）
-n	指定请求数（10000）
-d	以字节的形式指定 SET/GET 值的数据大小（2）
-k	1=keep alive 0=reconnect（1）
-r	SET/GET/INCR 使用随机 key, SADD 使用随机值	
-P	通过管道传输 <numreq> 请求（1）
-q	强制退出 redis。仅显示 query/sec 值	
--csv	以 CSV 格式输出	
-l	生成循环，永久执行测试	
-t	仅运行以逗号分隔的测试命令列表。	
-I	Idle 模式。仅打开 N 个 idle 连接并等待。

例子：redis-benchmark -h 127.0.0.1 -p 6379 -t set,lpush -n 10000 -q
主机为 127.0.0.1，端口号为 6379，执行的命令为 set,lpush，请求数为 10000，通过 -q 参数让结果只显示每秒执行的请求数。
=====================管道技术


