
======================================获取
text() - 设置或返回所选元素的文本内容
html() - 设置或返回所选元素的内容（包括 HTML 标记）
val() - 设置或返回表单字段的值
attr("属性名") 方法用于获取属性值。

建议:
对于 HTML 元素本身就带有的固有属性，在处理时，使用 prop 方法。
具有 true 和 false 两个属性的属性，如 checked, selected 或者 disabled 使用prop()
对于 HTML 元素我们自己自定义的 DOM 属性，在处理时，使用 attr 方法。
prop()函数的结果:
      1.如果有相应的属性，返回指定属性值。
      2.如果没有相应的属性，返回值是空字符串。
attr()函数的结果:
      1.如果有相应的属性，返回指定属性值。
      2.如果没有相应的属性，返回值是 undefined。

例:
$("#btn1").click(function(){
  alert("值为: " + $("#test").val());
});

例:
$("button").click(function(){
  alert($("#runoob").attr("href"));
});

======================================设置
text("值") - 设置或返回所选元素的文本内容
html("值") - 设置或返回所选元素的内容（包括 HTML 标记）
val("值")  - 设置或返回表单字段的值
$("#runoob").attr("属性名","值");

函数回调:
$("#runoob").attr("href", function(i,origValue){		//参数1为被选元素列表中当前元素的下标，参数2为原始（旧的）值
    return origValue + "/jquery"; 
  });
  
======================================元素	
append()			在被选元素的结尾插入内容
prepend()			在被选元素的开头插入内容
after()			在被选元素之后插入内容
before()			在被选元素之前插入内容
$("#div1").remove();		删除被选元素及其子元素。
$("#div1").empty();		删除被选元素的子元素。
$("body div:first").addClass("important blue");			添加类
$("h1,h2,p").removeClass("blue");					删除类
$("h1,h2,p").toggleClass("blue");					添加和删除类间切换
$("p").css("background-color");					返回样式的值
$("p").css({"background-color":"yellow","font-size":"200%"});	设置样式的值

下面的例子删除 class="italic" 的所有 <p> 元素(不能删除带有过滤器的子元素)：
$("p").remove(".italic");

=====================================关系获取
$("span").parent();			返回被选元素的直接父元素
$("span").parents([元素名]);		返回被选元素的所有祖先元素(可用元素名筛选)
$("span").parentsUntil("div");	返回介于两个给定元素之间的所有祖先元素
$("div").children([元素名.类]);	返回被选元素的所有直接子元素(可用元素名筛选)
$("div").find([元素名]);		返回被选元素的后代元素，一路向下直到最后一个后代(可用元素名筛选)

$("h2").siblings([元素名]);		返回被选元素的所有同胞元素
$("h2").next();			返回被选元素的下一个同胞元素
$("h2").nextAll();			返回被选元素的所有跟随的同胞元素
$("h2").nextUntil("h6");		返回介于两个给定参数之间的所有跟随的同胞元素。
prev(), prevAll() & prevUntil()	与上面类似,方向相反

$("div p").first();			返回被选元素的首个元素
$("div p").last();			被选元素的最后一个元素

$("p").eq(1);				返回被选元素中带有指定索引号的元素
$("p").filter(".url");		匹配的元素会被返回
$("p").not(".url");			返回不匹配标准的所有元素


