
=======================负载均衡策略:
1.轮询
这种是默认的策略，把每个请求按顺序逐一分配到不同的server

缺点是：可靠性低和负载分配不均衡。

    upstream  suyi {   
        server    127.0.0.1:8080; 
        server    127.0.0.1:8090;  
    } 

2.最少连接
把请求分配到连接数最少的server

    upstream  suyi {
        least_conn;
        server    127.0.0.1:8080; 
        server    127.0.0.1:8090;  
    } 

3.权重
使用weight来指定server访问比率，weight默认是1。用于后端服务器性能不均的情况。

    upstream  suyi {   
        server    127.0.0.1:8080 weight=6;//60%
        server    127.0.0.1:8090 weight=4;//40%  
    }

4.ip_hash
每个请求会按照访问ip的hash值分配，这样同一客户端连续的Web请求都会被分发到同一server进行处理，可以解决session的问题。

    upstream  suyi {
        ip_hash;
        server    127.0.0.1:8080; 
        server    127.0.0.1:8090;  
    }

ip_hash可以和weight结合使用。

 

5.fair(第三方)

　　按后端服务器的响应时间来分配请求，响应时间短的优先分配。与weight分配策略类似。

    upstream suyi{ 
        server 127.0.0.1:9001; server 127.0.0.1:9002; fair; 
    }

 

6、url_hash（第三方）
按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。

    upstream backserver {
        server squid1:3128;
        server squid2:3128;
        hash $request_uri;
        hash_method crc32;
    }

