数据查询：
	SELECT 数据名1，数据名2，· · · 
	FROM  表名
	WHERE  约束条件
	ORDER BY 数据名1 ASC，数据名2 ···  DESC	//按照数据名升序排序（升序数据名1后降序数据名2）
	GROUP BY 数据名			//按数据名中内容不同分组
	[HAVING	条件]		//分组后选择符合条件的

如果查询结果包含了重复元组，在SELECT后加DISTINCT可去除，例： SELECT DISTINCT SNO
				 加ALL全部显示
				 加TOP n输出前n个元组
				 加TOP n PERCENT输出前n%的元组
在第一行后+ 'INTO  表名1' 将选择的结果存入表名1中，例：
			SELECT   DISTINCT(SNO)    INTO  GRADE_NPASS
 、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、WHERE
约束条件：数据名   (NOT)    BETWEEN  数据  AND   数据
	数据名  （NOT） IN('字符串1' , '字符串2' , ···)
	数据名    (NOT)   LIKE     '字符串'     [ESCAPE    '换码字符']
	数据名    IS  (NOT)  NULL
	order by 字段  DESC | ASC	
、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、
例：
USE JXGL
SELECT   CNO   AS   '课程表',  COUNT(SNO)   AS   '人数'
FROM   SC
GROUP   BY CNO		//所有具有相同CNO值的元组为一组
HAVING   COUNT(SNO)>=8 

查询出选课人数超过8人的课程表
/////////////////////////////////////////////////////////////////////////////////////////////////////////
*联合查找：

   集合并运算：
	查询语句1
	UNION
	查询语句2
//符合查询语句1或2的会显示出来

   集合交运算：
	查询语句1
	INTERSECT
	查询语句2
//符合1且符合2的显示

   集合差运算：
	查询语句1
	EXCEPT
	查询语句2
//符合1且不符合2的显示

//////////////////////////////////////////////////////////////////////////
% 代表任意字符
_ 代表任意单个字符
--  注释
/* */  注释