读取文件的同时进行解析处理，但只能读取，不能增删改
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;


1.首先写一个继承DefaultHandler类：
public class MyHnadler extends DefaultHandler {
     String nodeName;	//用于记录当前解析的节点名
     。。。属性；

    //xml开始解析时调用
    public void startDocument() throws SAXException {
        super.startDocument();
	一般用于初始化属性；
    }

    //某个节点开始解析时调用
    public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
        super.startElement(uri, localName, qName, attributes);
	一般记录当前解析的节点名
	nodeName=localName;
    }

    //获取节点内容时调用，ch为正在解析的节点内容
    public void characters(char[] ch, int start, int length) throws SAXException {
        super.characters(ch, start, length);
	一般根据节点名nodeName来判断ch给哪个属性赋值
    }

    //完成某个节点解析时调用
    public void endElement(String uri, String localName, String qName) throws SAXException {
        super.endElement(uri, localName, qName);
	一般判断是否是对象外节点来将所有属性进行数据收集，然后清空
    }

    //xml解析完成是调用
    public void endDocument() throws SAXException {
        super.endDocument();
    }
}


2.开始解析：
        SAXParserFactory factory=SAXParserFactory.newInstance();
        XMLReader xmlReader=factory.newSAXParser().getXMLReader();		//获取解析读者
        MyHandler handler=new MyHandler();				//创建自定义解析实例
        xmlReader.setContentHandler(handler);				//设置自定义解析
        xmlReader.parse(new InputSource(new StringReader( xml文本内容字符串 )));	//载入xml文本内容并开始解析