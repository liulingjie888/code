自定义名称空间声明
<元素名  xmlns:名称空间别名="URI名称空间">	//表示该元素名中的子元素和属性可以声明到该空间名下，如xm:name
默认名称空间声明
<元素名  xmlns="URI名称空间">		//表示该元素名中的子元素和属性没有名称空间的默认添加到该名称空间下

--------------------------------------------Simple.xsd文件示范-----------------------------------------------------
<?xml version="1.0"?>
<xs:schema  xmlns:xs="http://www.w3.org/2001/XMLSchema"	//声明名称空间http://www.w3.org/2001/XMLSchema的别名xs （官方）
	[ targetNamespace="URI名称空间" ] 			//表示该Shcema文档只应用到该空间名下的元素和属性
	[ elementFormDefault=" qualified " ] >			//表示引用这个Schema的XML实例文档的元素和数据类型都有名称空间限制

	<xs:element  name="root"  type="xs:string"/>
	. . . . . .
</xs:schema>
---------------------------------------------Schema文档入----------------------------------------------------------


（1）使用名称空间引入XML Schema文档
<书架  xmlns[:自定义空间名]="默认URI名称空间"    			//声明默认名称空间（自定义），代表该元素中的所有元素和属性在该空间名下，除非子元素也设定了其他默认名称空间
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	//声明名称空间（官方）
           xsi:schemaLocation="应用到的URI名称空间   http://www.it315.org/xmlbook.xsd   . . . .">	//可导入多个，第一个URI表示Schema约束应用到该名称空间下的属性和元素，第二个为Schema文档的URI位置
	. . . . . .
</书架>
（2）不使用名称空间导入
<书架  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	//声明名称空间（官方）
           xsi:noNamespaceSchemaLocation="xmlbook.xsd">		//导入，为相对路径
	. . . . . .
</书架>

-----------------------------------------------------Schema语法--------------------------------------------------------
（1）元素定义
//表示元素只能为指定数据类型，数据类型有：字符xs:string   小数xs:decimal    整数xs:integer   布尔xs:boolean   日期xs:date   时间xs:time
<xs:element name="元素名"  type="数据类型"/>
（2）属性定义
//表示属性只能为指定数据类型，数据类型同上
<xs:attribute  name"属性名"  type="数据类型"/>
（3）简单类型（元素只包含字符类型）
<xs:element  name="元素名">
	<xs:simpleType>
		//限定该元素内容为18-58
		<xs:restriction  base="xs:integer">
			<xs:minInclusive  value="18"/>
			<xs:maxInclusive  value="58"/>
		</xs:restriction>
		//限定该元素内容要匹配正则表达式
		<xs:restriction  base="xs:string">
			<xs:pattern  value="[a-z]"/>
		</xs:restriction>
		//preserve表示不对内容的空白字符解析处理，replace表示移除所有空白字符，collapse表示将所有空白字符缩减为一个单一字符
		<xs:restriction  base="xs:string">
			<xs:whiteSpace  value="preserve"/>
		</xs:restriction>
		//表示元素内容只能为指定值
		<xs:restriction  base="数据类型">
			<xs:enumeration  value="值1"/>
			<xs:enumeration  value="值2"/>
			<xs:enumeration  value="值3"/>
			. . . . . .
		</xs:restriction>
	</xs:simpleType>
</xs:element>
（4）复杂类型（非简单类型）
<xs:element  name="元素名">
	<xs:complexType  [mix="true"] >	//mix表示复杂类型元素内子元素和字符数据可以相邻，默认false
		//定义为空元素，是空元素！
		<xs:attribute  name="属性名"  type="xs:positiveInteger"/>
		//表示元素按顺序嵌套了这两个子元素
		<xs:sequence>
			<xs:element  name="子元素名1"  type="数据类型"/>
			<xs:element  name="子元素名2"  type="缩减类型"/>
			. . . . . .
		</xs:sequence>
		//表示给该元素添加了属性名和元素
		<xs:simpleContent>
			<xs:extension  base="xs:integer">
				<xs:attribute  name="属性名"  type="数据类型"/>
				<xs:element  name="元素名"  type="数据类型"/>
			</xs:extension>
		</xs:simpleContent>
		//表示
	</xs:complexType>
</xs:element>

