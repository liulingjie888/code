import java.io.File;
import java.util.Date;  

-----------------------------------------------------------------------------------

UUID.randomUUIID().toString()	//生成不重复字符，一般文件防止重名

创建文件方式：
f.getParentFile().mkdirs();	 // 创建父目录
f.createNewFile();		// 创建一个空文件,如果父文件夹不存在，就会抛出异常

创建目录方式：
f.mkdir();			//如果父文件夹不存在，则创建无效	
f.mkdirs();			// 如果父文件夹不存在，就会创建父文件夹

---------------------------------------在类中取得路径-------------------------------------

(1)类的绝对路径：Class.class.getClass().getResource("/").getPath()
结果：/D:/TEST/WebRoot/WEB-INF/classes/pack/

(2)得到工程的路径：System.getProperty("user.dir")
结果：D:\TEST

(3)得到包类文件同一目录下文件的字节流
InputStream in=new 类().getClass().getClassLoader().getResourceAsStream("文件名");

-------------------------------------------------------------------
构造方法：
// 绝对路径
        File f1 = new File("d:/LOLFolder");

// 相对路径,相对于工作目录，如果在eclipse中，就是项目目录
        File f2 = new File("LOL.exe");

  
// 把f1作为父目录创建文件对象
        File f3 = new File(f1, "LOL.exe");

--------------------------------------------
文件常用方法

        File f = new File("d:/LOLFolder/LOL.exe");

        //文件是否存在
        f.exists();
         
        //是否是文件夹
        f.isDirectory();
          
        //是否是文件（非文件夹）
        f.isFile();
          
        //文件长度
        f.length();
          
        //文件最后修改时间，距离1970.1.1 08:00:00时间秒
        long  f.lastModified();
       
        //设置文件修改时间为1970.1.1 08:00:00
        f.setLastModified(0);
          
        //文件重命名
        File f2 =new File("d:/LOLFolder/DOTA.exe");
        f.renameTo(f2);

        //文件绝对路径
        f.getAbsolutePath()；

----------------------------------------------
文件常用操作

        File f = new File("d:/LOLFolder/skin/garen.ski");
  
        // 以字符串数组的形式，返回当前文件夹下的所有文件（不包含子文件及子文件夹）
        f.list();
  
        // 以文件数组的形式，返回当前文件夹下的所有文件（不包含子文件及子文件夹）
        File[] fs= f.listFiles();
  
        // 以字符串形式返回获取所在文件夹
        f.getParent();
  
        // 以文件形式返回获取所在文件夹
        f.getParentFile();
        // 创建文件夹，如果父文件夹不存在，创建就无效
        f.mkdir();
  
        // 创建文件夹，如果父文件夹不存在，就会创建父文件夹
        f.mkdirs();
  
        // 创建一个空文件,如果父文件夹不存在，就会抛出异常
        f.createNewFile();

        // 所以创建一个空文件之前，通常都会创建父目录
        f.getParentFile().mkdirs();
  
        // 列出所有的盘符c: d: e: 等等
        f.listRoots();
  
        // 刪除文件
        f.delete();
  
        // JVM结束的时候，刪除文件，常用于临时文件的删除
        f.deleteOnExit();

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
