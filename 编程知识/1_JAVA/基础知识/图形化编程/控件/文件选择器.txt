JFileChooser 表示文件选择器
使用FileFilter用于仅选择.txt文件

fc.showOpenDialog(); 用于打开文件
fc.showSaveDialog(); 用于保存文件

import java.io.File; 	 
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

        ……
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileFilter() {
             
            @Override
            public String getDescription() {
                // TODO Auto-generated method stub
                return ".txt";
            }
             
            @Override
            public boolean accept(File f) {				//打开其他文件将后缀改TXT
                return f.getName().toLowerCase().endsWith(".txt");
            }
        });
  
        JButton bOpen = new JButton("打开文件");
        JButton bSave = new JButton("保存文件");
        ……
        bOpen.addActionListener(new ActionListener() {
              
            @Override
            public void actionPerformed(ActionEvent e) {
                 int returnVal =  fc.showOpenDialog(f);
                 File file = fc.getSelectedFile();			//选中的文件
                 if (returnVal == JFileChooser.APPROVE_OPTION) {
                     JOptionPane.showMessageDialog(f, "计划打开文件:" + file.getAbsolutePath());
                 }
                  
            }
        });
        bSave.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int returnVal =  fc.showSaveDialog(f);
                File file = fc.getSelectedFile();
                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    JOptionPane.showMessageDialog(f, "计划保存到文件:" + file.getAbsolutePath());
                }
            }
        });
  
该文件选择器被弹下时的返回状态： 
JFileChooser.CANCEL_OPTION 
JFileChooser.APPROVE_OPTION 
JFileChooser.ERROR_OPTION 如果发生错误或者该对话框已被解除 
抛出： 
HeadlessException - 如果 GraphicsEnvironment.isHeadless() 返回 true。

fc.showSaveDialog(参数)		//参数可为null和对话框的父组件
  