


=========================目录
Maven 提倡使用一个共同的标准目录结构，Maven 使用约定优于配置的原则，大家尽可能的遵守这样的目录结构。如下所示：

${basedir} 				存放pom.xml和所有的子目录
${basedir}/src/main/java 		项目的java源代码
${basedir}/src/main/resources		项目的资源，比如说property文件，springmvc.xml
${basedir}/src/test/java 		项目的测试类，比如说Junit代码
${basedir}/src/test/resources 	测试用的资源
${basedir}/src/main/webapp/WEB-INF 	web应用文件目录，web项目的信息，比如存放web.xml、本地图片、jsp视图页面
${basedir}/target 			打包输出目录
${basedir}/target/classes 		编译输出目录
${basedir}/target/test-classes 	测试编译输出目录
Test.java 		Maven只会自动运行符合该命名规则的测试类
~/.m2/repository 	Maven默认的本地仓库目录位置  

=========================生命周期
验证 validate 	验证项目 	验证项目是否正确且所有必须信息是可用的
编译 compile 	执行编译 	源代码编译在此阶段完成
测试 Test 	测试 		使用适当的单元测试框架（例如JUnit）运行测试。
包装 package 	打包 		创建JAR/WAR包如在 pom.xml 中定义提及的包
检查 verify 	检查 		对集成测试的结果进行检查，以保证质量达标
安装 install 	安装 		安装打包的项目到本地仓库，以供其他项目使用
部署 deploy 	部署 		拷贝最终的工程包到远程仓库中，以共享给其他开发人员和工程

Maven 有以下三个标准的生命周期：
    clean：项目清理的处理
    default(或 build)：项目部署的处理
    site：项目站点文档创建的处理


