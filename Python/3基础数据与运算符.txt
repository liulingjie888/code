
Python3 的六个标准数据类型中：
不可变数据（3 个）：
Number（数字）、String（字符串）、Tuple（元组）；
可变数据（3 个）：
List（列表）、Dictionary（字典）、Set（集合）。

===================Number（数字）
Python3 支持 int、float、bool、complex（复数）

注意
1、Python可以同时为多个变量赋值，如a, b = 1, 2。
2、一个变量可以通过赋值指向不同类型的对象。
3、数值的除法包含两个运算符：/ 返回一个浮点数，// 返回一个整数。
4、在混合计算时，Python会把整型转换成为浮点数。

===================字符串（元素是可以改变的）
Python中的字符串用单引号 ' 或双引号 " 括起来，同时使用反斜杠 \ 转义特殊字符。
print(r'Ru\noob')    #不让反斜杠发生转义，可以在字符串前面添加一个 r，表示原始字符串
print (str[2:])      # 输出从第三个开始的后的所有字符
print (str * 2)      # 输出字符串两次，也可以写成 print (2 * str)
print (str[0:-1])    # 输出第一个到倒数第二个的所有字符
print (str + "TEST") # 连接字符串

==================List列表（列表中的元素是可以改变的）
list = [ 'abcd', 786 , 2.23, 'runoob', 70.2 ]	#类似数组

print (list[1:3])       # 从第二个开始输出到第三个元素
print (list[2:])        # 输出从第三个元素开始的所有元素
print (tinylist * 2)    # 输出两次列表
print (list + tinylist) # 连接列表
a[2:5] = []   		# 去除指定位置的元素
a[2:5:2]   		# 打印下标2到5步长为2的元素（也就是在范围内打印前2个）
inputWords[-1::-1]	# 倒置列表

注意：
1、List写在方括号之间，元素用逗号隔开。
2、和字符串一样，list可以被索引和切片。
3、List可以使用+操作符进行拼接。
4、List中的元素是可以改变的。

==================Tuple（元组）
元组（tuple）与列表类似，不同之处在于元组的元素不能修改。元组写在小括号 () 里，元素之间用逗号隔开。
虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。
构造包含 0 个或 1 个元素的元组比较特殊，所以有一些额外的语法规则：
tup1 = ()    # 空元组
tup2 = (20,) # 一个元素，需要在元素后添加逗号

tuple = ( 'abcd', 786 , 2.23, 'runoob', 70.2  )
tinytuple = (123, 'runoob')

print (tuple[1:3])        # 输出从第二个元素开始到第三个元素
print (tuple[2:])         # 输出从第三个元素开始的所有元素
print (tinytuple * 2)     # 输出两次元组
print (tuple + tinytuple) # 连接元组

===================Set（集合）
#集合（set）是由一个或数个形态各异的大小整体组成的，构成集合的事物或对象称作元素或是成员。
基本功能是进行成员关系测试和删除重复元素。

#可以使用大括号 { } 或者 set() 函数创建集合，注意：创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。

#创建格式：
parame = {value01,value02,...}
或者
set(value)

student = {'Tom', 'Jim', 'Mary', 'Tom', 'Jack', 'Rose'}
# 成员测试
if 'Rose' in student :
    print('Rose 在集合中')
else :
    print('Rose 不在集合中')

# set可以进行集合运算
a = set('abracadabra')
b = set('alacazam')
print(a)
print(a - b)     # a 和 b 的差集
print(a | b)     # a 和 b 的并集
print(a & b)     # a 和 b 的交集
print(a ^ b)     # a 和 b 中不同时存在的元素

===================Dictionary（字典）
#列表是有序的对象集合，字典是无序的对象集合。两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。

#字典是一种映射类型，字典用 { } 标识，它是一个无序的 键(key) : 值(value) 的集合。

#键(key)必须使用不可变类型。

tinydict = {'name': 'runoob','code':1, 'site': 'www.runoob.com'}
print (dict['one'])       # 输出键为 'one' 的值
print (dict[2])           # 输出键为 2 的值
print (tinydict)          # 输出完整的字典
print (tinydict.keys())   # 输出所有键
print (tinydict.values()) # 输出所有值

#另外，字典类型也有一些内置的函数，例如clear()、keys()、values()等。
注意：
1、字典是一种映射类型，它的元素是键值对。
2、字典的关键字必须为不可变类型，且不能重复。
3、创建空字典使用 { }。
===================Python数据类型转换
以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象，表示转换的值。

int(x [,base])
将x转换为一个整数

float(x)
将x转换到一个浮点数

complex(real [,imag])
创建一个复数

str(x)
将对象 x 转换为字符串

repr(x)
将对象 x 转换为表达式字符串

eval(str)
用来计算在字符串中的有效Python表达式,并返回一个对象

tuple(s)
将序列 s 转换为一个元组

list(s)
将序列 s 转换为一个列表

set(s)
转换为可变集合

dict(d)
创建一个字典。d 必须是一个 (key, value)元组序列。

frozenset(s)
转换为不可变集合

chr(x)
将一个整数转换为一个字符

ord(x)
将一个字符转换为它的整数值

hex(x)
将一个整数转换为一个十六进制字符串

oct(x)
将一个整数转换为一个八进制字符串

===================语法
变量=值						#赋值
变量1, 变量2... = 值1，值2			#多个变量赋值
del var1[,var2[,var3[....,varN]]]		#删除对象引用
type(变量)					#查询变量所指的对象类型（否认子类是一种父类类型）
isinstance(变量, 变量类型)			#查询变量是否是指定类型（认为子类是一种父类类型）
变量[头下标:尾下标]				#字符串的截取(索引值以 0 为开始值，-1 为从末尾的开始位置)
变量[头下标:尾下标]				#列表截取


