开源客户端：TortoiseSVN

mkdir /opt/svn					#手动新建版本库目录

svnadmin create /opt/svn/runoob		#利用svn命令创建版本库

svnserve -d -r 目录 [--listen-port 端口号]	#使用命令svnserve启动服务
-r: 配置方式决定了版本库访问方式。
--listen-port: 指定SVN监听端口，默认监听3690

===========方式一：
-r直接指定到版本库(称之为单库svnserve方式)
svnserve -d -r /opt/svn/runoob

#在这种情况下，一个svnserve只能为一个版本库工作。
#authz配置文件中对版本库权限的配置应这样写：
[groups]
admin=user1
dev=user2
[/]
@admin=rw
user2=r
#使用类似这样的URL：svn://192.168.0.1/　即可访问runoob版本库

===========方式二：
指定到版本库的上级目录(称之为多库svnserve方式)
svnserve -d -r /opt/svn

#这种情况，一个svnserve可以为多个版本库工作
#authz配置文件中对版本库权限的配置应这样写：

[groups]
admin=user1
dev=user2
[runoob:/]
@admin=rw
user2=r

[runoob01:/]
@admin=rw
user2=r
#如果此时你还用[/]，则表示所有库的根目录，同理，[/src]表示所有库的根目录下的src目录。
#使用类似这样的URL：svn://192.168.0.1/runoob　即可访问runoob版本库。

========================配置（版本库的authz目录下）
1、svn服务配置文件svnserve.conf

[general]
anon-access = none
auth-access = write
password-db = /home/svn/passwd
authz-db = /home/svn/authz
realm = tiku 

anon-access: 控制非鉴权用户访问版本库的权限，取值范围为"write"、"read"和"none"。 即"write"为可读可写，"read"为只读，"none"表示无访问权限。 默认值：read
auth-access: 控制鉴权用户访问版本库的权限。取值范围为"write"、"read"和"none"。 即"write"为可读可写，"read"为只读，"none"表示无访问权限。 默认值：write
password-db: 指定用户口令文件
authz-db: 指定权限配置文件名，通过该文件可以实现以路径为基础的访问控制。 除非指定绝对路径，否则文件位置为相对conf目录的相对路径。 默认值：authz
realm: 指定版本库的认证域，即在登录时提示的认证域名称。若两个版本库的 认证域相同，建议使用相同的用户名口令数据文件。 默认值：一个UUID(Universal Unique IDentifier，全局唯一标示)。

2、用户名口令文件passwd
用户名口令文件由svnserve.conf的配置项password-db指定，默认为conf目录中的passwd。该文件仅由一个[users]配置段组成。
[users]配置段的配置行格式：<用户名> = <口令>

如：
[users]
admin = admin
thinker = 123456

3、权限配置文件
权限配置文件由svnserve.conf的配置项authz-db指定，默认为conf目录中的authz。该配置文件由一个[groups]配置段和若干个版本库路径权限段组成。

[groups]配置段中配置行格式如下：
<用户组> = <用户列表>

版本库路径权限段的段名格式如下：
[<版本库名>:<路径>] 
[groups]
g_admin = admin,thinker

[admintools:/]
@g_admin = rw
* =

[test:/home/thinker]
thinker = rw
* = r

