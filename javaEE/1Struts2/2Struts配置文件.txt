//配置文件放在src文件夹下,struts.xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration2.5//EN"
	"http://struts.apache.org/dtds/struts-2.5.dtd">

<struts>
	<package name="default" extends="struts-default">
		<action name="login" class="org.action.LoginAction">		//访问/login则会请求该LoginAction类
			<result name="success">main.jsp</result>
			<result name="error">error.jsp</result>
		</action>
		[<default-class-ref class="org.action.LoginAction"/>]	//使用默认类:  action未定义class属性时默认为该类
		[<default-action-ref name="action的name值">]		//默认action
		[<default-interceptor-ref>]				//默认拦截器
		[<global-results>					//全局结果： 在指定action中找不到处理结果则会找全局结果处理
			<result name="error">error.jsp</result>
		</global-results>]
		[<global-exception-mappings>
	 		<exception-mapping result="逻辑视图" exception="异常类型"/>	//发生异常时对应的视图信息，也可定义在action标签中
 		</global-exception-mappings>]
	</package>

	<include file="/包名/xs.xml"/>				//表示将其他struts配置信息包含进来
	[<constant name="struts.devMode" value="true"/>]	//设置开发模式
	[<constant name="struts.il8n.encoding" value="utf-8"/>]	//设置编码格式
	[<constant name="struts.multipart.maxSize" value="1024"/>]	//设置上传文件最大为1024byte
</struts>

---------------------------struts下的子标签

<bean>

<package>属性：
	namespace="/自定义"	//表示空间名，默认空间名""，根空间名"/",若指定了空间名，则表单action请求要加上空间名，如user/login.action ; login.action表示根空间名下
	name			//用于其他package引用
	extends			//继承其他包，默认会继承struts-default包
	abstract		//抽象表，不能包含action
	
<action>标签说明:
	name:必须，用于表单指定处理的action属性
	class:指定处理类的全包名
	method:指定由类中的哪个方法处理
	converter:指定Action使用的类型转换器

<result> 标签
	<result name="Action处理返回值" type="处理类型">跳转路径
		<param name="参数名">参数值<param>
	</result>
 	处理类型:
	chain: 跳转到其他action
	dispatcher(默认值):  表示服务器跳转请求，配置该类型后，result可以指定location属性（跳转地址）和parse属性（是否在location参数中使用表达式）
	redirect:  表示重定向
	redirectAction:  表示重定向一个新的action，例：
		<result name="actionName" type="redirectAction">
			<param name="actionName">重定向action的name</param>
			<param name="namespace">/空间名<param>	//表示跳转到指定namespace的package下的action
		</result>

===============================其他
=======1
//{1}表示name的*（但不包含后缀.action），当表单指定的action为login.action时，则{1}会替换成login。
通配符：<action name="*" class="org.action.LoginAction" method="{1}"></action>
	
=======2
<form action="action的name名!actiong的执行方法名.action" method=""></form>	//在form中指定action类的执行方法
<interceptors>		//配置拦截器
<result-types>		//配置结果类型

