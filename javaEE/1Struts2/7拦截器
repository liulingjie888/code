
==============================配置文件声明
<package name="default" namespace="/" extends="struts-default">
    <!--声明拦截器-->
    <interceptors>
        <interceptor name="interceptor1" class="interceptorClass"/>
        <interceptor name="interceptor2" class="interceptorClass"/>
        <!--定义一个拦截器栈myStack，该拦截器栈中包含两个拦截器和一个默认拦截器栈-->
        <interceptor-stack name="myStack">
            <interceptor-ref name="defaultStack"/>
            <interceptor-ref name="interceptor1"/>
            <interceptor-ref name="interceptor2"/>
        </interceptor-stack>
    </interceptors>
</package>


==============================使用例子
==========拦截器类：

public class DateInterceptor extends AbstractInterceptor {
 
    public String intercept(ActionInvocation invocation) throws Exception {
       ProductAction action = (ProductAction)invocation.getAction();
       action.setDate(new Date());
       return invocation.invoke();			//invocation表示执行下一个拦截器或最后一个Action，返回它们的name值
    }
}

==========struts.xml配置：
<package name="basicstruts" extends="struts-default">
        <interceptors>				//声明拦截器
            <interceptor name="dateInterceptor" class="com.how2java.interceptor.DateInterceptor" />
        </interceptors>
 
        <action name="*Product*" class="com.how2java.action.ProductAction" method="{1}">
            <interceptor-ref name="dateInterceptor" />		//使用拦截器
            <interceptor-ref name="defaultStack" />  		//使用默认拦截器。使用自定义拦截器后，默认拦截器会失效，使用需添加
            <result name="show">show.jsp</result>
            <result name="list">list.jsp</result>
        </action>
 
</package>
