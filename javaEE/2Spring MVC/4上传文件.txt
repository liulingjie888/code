==================在web.xml中新增加一段( 并且必须加在springmvc的servlet之前)
 
<servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.jpg</url-pattern>
</servlet-mapping>

说明：
因为配置springmvc的servlet的时候，使用的路径是"/"，导致静态资源在默认情况下不能访问，
所以要加上这一段，允许访问jpg。
如果你配置spring-mvc使用的路径是/*.do，就不会有这个问题了。

================配置springmvc-servlet.xml
新增加一段配置：
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

================实现文件封装javaBean

public class UploadedImageFile {
    MultipartFile file;		//这里的字段file必须和上传文件name值一样
    public MultipartFile getFile() {
        return file;
    }
 
    public void setImage(MultipartFile file) {
        this.file = file;
    }
 
}

================实现控制类

@RequestMapping("/uploadImage")
    public ModelAndView upload(HttpServletRequest request, UploadedImageFile file) {
        File newFile = new File(request.getServletContext().getRealPath("/image"), "fileName");	//创建一个新的文件，在将上传的文件保存在其中
        newFile.getParentFile().mkdirs();
        file.getImage().transferTo(newFile);
        ......
    }
