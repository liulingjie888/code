Docker 官网：https://www.docker.com
Github Docker 源码：https://github.com/docker/docker-ce
==================认识
===Docker 镜像(Images)是用于创建 Docker 容器的模板，比如 Ubuntu 系统。

===Docker 容器(Container)是独立运行的一个或一组应用，是镜像运行时的实体。

===Docker 客户端(Client)客户端通过命令行或者其他工具使用 Docker SDK (https://docs.docker.com/develop/sdk/) 与 Docker 的守护进程通信。

===Docker 主机(Host)一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。

===Docker Registry仓库用来保存镜像，可以理解为代码控制中的代码仓库。

===Docker Hub(https://hub.docker.com) 提供了庞大的镜像集合供使用。
一个 Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。
通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 <仓库名>:<标签> 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 latest 作为默认标签。

===Docker Machine是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。


==================修改仓库地址
编辑 /etc/default/docker 文件，在其中的 DOCKER_OPTS 中配置加速器地址：
DOCKER_OPTS="--registry-mirror=https://registry.docker-cn.com"


=================ps信息
输出详情介绍：
CONTAINER ID: 容器 ID。
IMAGE: 使用的镜像。
COMMAND: 启动容器时运行的命令。
CREATED: 容器的创建时间。
STATUS: 容器状态。
PORTS: 容器的端口信息和使用的连接类型（tcp\udp）。
NAMES: 自动分配的容器名称。

状态有7种：
created（已创建）
restarting（重启中）
running（运行中）
removing（迁移中）
paused（暂停）
exited（停止）
dead（死亡）


===================
docker守护进程启动的时候，会默认赋予名字为docker的用户组读写Unix socket的权限，因此只要创建docker用户组，并将当前用户加入到docker用户组中，那么当前用户就有权限访问Unix socket了，进而也就可以执行docker相关命令

getent group docker		#查看信息
sudo groupadd docker     	#创建docker用户组
sudo adduser 用户名 docker      #将用户加入到docker用户组中
newgrp docker     		#更新用户组
docker ps    			#测试docker命令是否可以使用sudo正常使用


